{"version":3,"sources":["logo.svg","components/people.jsx","components/cases.jsx","components/messages.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","People","props","state","people","add","name","summonerName","loadPeople","bind","addPerson","removePerson","showAddPerson","hideAddPerson","getPeopleList","onName","onSummonerName","fetch","mode","method","headers","body","JSON","stringify","this","then","res","json","setState","map","person","key","id","Button","onClick","variant","push","placeholder","onChange","e","preventDefault","target","value","result","error","console","log","Table","striped","bordered","hover","React","Component","Cases","cases","case","description","load","remove","showAdd","hideAdd","getList","onId","onCase","onDescription","Messages","messages","message","onMessage","Home","App","Navbar","bg","expand","Brand","to","Toggle","aria-controls","Collapse","Nav","className","Link","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5c70d18a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\nclass People extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            people: [],\r\n            add: false,\r\n            name: \"\",\r\n            summonerName: \"\",\r\n        }\r\n\r\n        this.loadPeople = this.loadPeople.bind(this);\r\n        this.addPerson = this.addPerson.bind(this);\r\n        this.removePerson = this.removePerson.bind(this);\r\n        this.showAddPerson = this.showAddPerson.bind(this);\r\n        this.hideAddPerson = this.hideAddPerson.bind(this);\r\n        this.getPeopleList = this.getPeopleList.bind(this);\r\n        this.onName = this.onName.bind(this);\r\n        this.onSummonerName = this.onSummonerName.bind(this);\r\n\r\n        this.loadPeople();\r\n    }\r\n\r\n    addPerson() {\r\n        fetch(\"/api/addPeople\", {\r\n                mode: 'cors',\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: this.state.name,\r\n                    summonerName: this.state.summonerName\r\n                })\r\n            })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.loadPeople();\r\n            })\r\n    }\r\n\r\n    removePerson(summonerName) {\r\n        fetch(\"/api/removePeople\", {\r\n                mode: 'cors',\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    summonerName: summonerName\r\n                })\r\n            })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.loadPeople();\r\n            })\r\n    }\r\n\r\n    showAddPerson() {\r\n        this.setState({ add: true });\r\n    }\r\n\r\n    hideAddPerson() {\r\n        this.setState({add: false, name: \"\", summonerName: \"\"});\r\n    }\r\n\r\n    getPeopleList() {\r\n        var people = this.state.people.map((person) => <tr key={person.id}><td>{person.name}</td><td>{person.summonerName}</td><td><Button onClick={() => this.removePerson(person.summonerName)} variant=\"danger\">Delete</Button></td></tr>);\r\n        if (!this.state.add) {\r\n            return people;\r\n        } else {\r\n            people.push(<tr key=\"add\"><td><input placeholder=\"name\" onChange={this.onName}></input></td>\r\n            <td><input placeholder=\"summoner name\" onChange={this.onSummonerName}></input></td>\r\n            <td><Button onClick={this.addPerson} variant=\"primary\">Add</Button><Button onClick={this.hideAddPerson} variant=\"danger\">Delete</Button></td></tr>);\r\n            return people;\r\n        }\r\n    }\r\n\r\n    onName(e) {\r\n        e.preventDefault();\r\n        this.setState({name: e.target.value});\r\n    }\r\n\r\n    onSummonerName(e) {\r\n        e.preventDefault();\r\n        this.setState({summonerName: e.target.value});\r\n    }\r\n\r\n    loadPeople() {\r\n        try {\r\n            fetch(\"/api/people\", {\r\n                mode: 'cors',\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then((res) => res.json())\r\n                .then((result) => {\r\n                    this.setState({ add: false, people: result, name: \"\", summonerName: \"\" });\r\n                })\r\n        } catch (error) {\r\n            console.log(\"Error is\" + error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var people = this.getPeopleList();\r\n\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Summoner Name</th>\r\n                        <th><Button variant=\"primary\" onClick={this.showAddPerson}>Add</Button></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {people}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default People;\r\n","import React from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\nclass Cases extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            cases: [],\r\n            add: false,\r\n            id: \"\",\r\n            case: \"\",\r\n            description: \"\",\r\n        }\r\n\r\n        this.load = this.load.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.showAdd = this.showAdd.bind(this);\r\n        this.hideAdd = this.hideAdd.bind(this);\r\n        this.getList = this.getList.bind(this);\r\n        this.onId = this.onId.bind(this);\r\n        this.onCase = this.onCase.bind(this);\r\n        this.onDescription = this.onDescription.bind(this);\r\n\r\n        this.load();\r\n    }\r\n\r\n    add() {\r\n        fetch(\"/api/addCase\", {\r\n                mode: 'cors',\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: this.state.id,\r\n                    case: this.state.case,\r\n                    description: this.state.description\r\n                })\r\n            })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.load();\r\n            })\r\n    }\r\n\r\n    remove(id) {\r\n        fetch(\"/api/removeCase\", {\r\n                mode: 'cors',\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    id: id\r\n                })\r\n            })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.load();\r\n            })\r\n    }\r\n\r\n    showAdd() {\r\n        this.setState({ add: true });\r\n    }\r\n\r\n    hideAdd() {\r\n        this.setState({add: false});\r\n    }\r\n\r\n    getList() {\r\n        var cases = this.state.cases.map((cases) => <tr key={cases.id}><td>{cases.id}</td><td>{cases.case}</td><td>{cases.description}</td><td><Button onClick={() => this.remove(cases.id)} variant=\"danger\">Delete</Button></td></tr>);\r\n        if (!this.state.add) {\r\n            return cases;\r\n        } else {\r\n            cases.push(<tr key=\"add\">\r\n            <td><input placeholder=\"Case Id\" onChange={this.onId}></input></td>\r\n            <td><input placeholder=\"Case Name\" onChange={this.onCase}></input></td>\r\n            <td><input placeholder=\"Case Description\" onChange={this.onDescription}></input></td>\r\n            <td><Button onClick={this.add} variant=\"primary\">Add</Button><Button onClick={this.hideAdd} variant=\"danger\">Delete</Button></td>\r\n            </tr>);\r\n            return cases;\r\n        }\r\n    }\r\n\r\n    onId(e) {\r\n        e.preventDefault();\r\n        this.setState({id: e.target.value});\r\n    }\r\n\r\n    onCase(e) {\r\n        e.preventDefault();\r\n        this.setState({case: e.target.value});\r\n    }\r\n\r\n    onDescription(e) {\r\n        e.preventDefault();\r\n        this.setState({description: e.target.value});\r\n    }\r\n\r\n    load() {\r\n        try {\r\n            fetch(\"/api/cases\", {\r\n                mode: 'cors',\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then((res) => res.json())\r\n                .then((result) => {\r\n                    this.setState({ add: false, cases: result });\r\n                })\r\n        } catch (error) {\r\n            console.log(\"Error is\" + error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var cases = this.getList();\r\n\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Description</th>\r\n                        <th><Button variant=\"primary\" onClick={this.showAdd}>Add</Button></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {cases}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cases;","import React from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            messages: [],\r\n            add: false,\r\n            case: \"\",\r\n            message: \"\",\r\n        }\r\n\r\n        this.load = this.load.bind(this);\r\n        this.add = this.add.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.showAdd = this.showAdd.bind(this);\r\n        this.hideAdd = this.hideAdd.bind(this);\r\n        this.getList = this.getList.bind(this);\r\n        this.onCase = this.onCase.bind(this);\r\n        this.onMessage = this.onMessage.bind(this);\r\n\r\n        this.load();\r\n    }\r\n\r\n    add() {\r\n        fetch(\"/api/addMessage\", {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                case: this.state.case,\r\n                message: this.state.message\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.load();\r\n            })\r\n    }\r\n\r\n    remove(id) {\r\n        fetch(\"/api/removeMessage\", {\r\n            mode: 'cors',\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                id: id\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                this.load();\r\n            })\r\n    }\r\n\r\n    showAdd() {\r\n        this.setState({ add: true });\r\n    }\r\n\r\n    hideAdd() {\r\n        this.setState({ add: false });\r\n    }\r\n\r\n    getList() {\r\n        var messages = this.state.messages.map((messages) => <tr key={messages.id}><td>{messages.case}</td><td>{messages.message}</td><td><Button onClick={() => this.remove(messages.id)} variant=\"danger\">Delete</Button></td></tr>);\r\n        if (!this.state.add) {\r\n            return messages;\r\n        } else {\r\n            messages.push(<tr key=\"add\">\r\n                <td><input placeholder=\"Case\" onChange={this.onCase}></input></td>\r\n                <td><input placeholder=\"Message\" onChange={this.onMessage}></input></td>\r\n                <td><Button onClick={this.add} variant=\"primary\">Add</Button><Button onClick={this.hideAdd} variant=\"danger\">Delete</Button></td>\r\n            </tr>);\r\n            return messages;\r\n        }\r\n    }\r\n\r\n    onCase(e) {\r\n        e.preventDefault();\r\n        this.setState({ case: e.target.value });\r\n    }\r\n\r\n    onMessage(e) {\r\n        e.preventDefault();\r\n        this.setState({ message: e.target.value });\r\n    }\r\n\r\n    load() {\r\n        try {\r\n            fetch(\"/api/messages\", {\r\n                mode: 'cors',\r\n                method: 'get',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then((res) => res.json())\r\n                .then((result) => {\r\n                    this.setState({ add: false, messages: result });\r\n                })\r\n        } catch (error) {\r\n            console.log(\"Error is\" + error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var messages = this.getList();\r\n\r\n        return (\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Case</th>\r\n                        <th>Message</th>\r\n                        <th><Button variant=\"primary\" onClick={this.showAdd}>Add</Button></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {messages}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Messages;","import React from 'react'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2> Welcome to the mother fucking league log</h2>\r\n                <p>no thanks to brady, apparentely fucking around with my program is better than helping</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Nav, Navbar, Form, FormControl, Button } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport People from './components/people.jsx';\nimport Cases from './components/cases.jsx';\nimport Messages from './components/messages.jsx';\nimport Home from './components/home.jsx';\n\nclass App extends React.Component {\n  render() {\n    return (\n\n      <Router>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand><Link to=\"/\">The League Log</Link></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link><Link to=\"/people\">People</Link></Nav.Link>\n                <Nav.Link><Link to=\"/cases\">Cases</Link></Nav.Link>\n                <Nav.Link><Link to=\"/messages\">Messages</Link></Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          \n        <Switch>\n          <Route path=\"/messages\">\n            <Messages />\n          </Route>\n          <Route path=\"/cases\">\n            <Cases />\n          </Route>\n          <Route path=\"/people\">\n            <People />\n          </Route>\n          <Route>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}